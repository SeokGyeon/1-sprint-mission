-- USER
CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  email VARCHAR(100) UNIQUE NOT NULL,
  password TEXT NOT NULL CHECK (char_length(password) >=8),
  nickname VARCHAR(30) NOT NULL,
  profile_image TEXT,
  role VARCHAR(30) DEFAULT 'USER',
  permission_id INTEGER REFERENCES permission(id),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- PERMISSION
CREATE TABLE permission (
  id SERIAL PRIMARY KEY,
  name VARCHAR(30) NOT NULL,
  can_write BOOLEAN DEFAULT false,
  can_edit BOOLEAN DEFAULT false,
  can_delete BOOLEAN DEFAULT false,
  can_chat BOOLEAN DEFAULT false,
  can_access_mypage BOOLEAN DEFAULT false
);

-- PRODUCT
CREATE TABLE product (
  id SERIAL PRIMARY KEY,
  title VARCHAR(10) NOT NULL,
  price INTEGER NOT NULL,
  thumbnail TEXT,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- PRODUCT_DETAIL
CREATE TABLE product_detail (
  id SERIAL PRIMARY KEY,
  product_id INTEGER UNIQUE REFERENCES product(id) ON DELETE CASCADE,
  description TEXT CHECK (char_length(description) >= 10)
);

-- PRODUCT_IMAGE
CREATE TABLE product_image (
  id SERIAL PRIMARY KEY,
  product_id INTEGER REFERENCES product(id) ON DELETE CASCADE,
  image_url TEXT NOT NULL
);

-- PRODUCT_TAG
CREATE TABLE product_tag (
  id SERIAL PRIMARY KEY,
  product_id INTEGER REFERENCES product(id) ON DELETE CASCADE,
  tag_id INTEGER REFERENCES tag(id) ON DELETE CASCADE
);

-- PRODUCT_LIKE
CREATE TABLE product_like (
  id SERIAL PRIMARY KEY,
  product_id INTEGER REFERENCES product(id) ON DELETE CASCADE,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ARTICLE
CREATE TABLE article (
  id SERIAL PRIMARY KEY,
  title VARCHAR(100) NOT NULL,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ARTICLE_DETAIL
CREATE TABLE article_detail (
  id SERIAL PRIMARY KEY,
  article_id INTEGER UNIQUE REFERENCES article(id) ON DELETE CASCADE,
  content TEXT
);

-- ARTICLE_IMAGE
CREATE TABLE article_image (
  id SERIAL PRIMARY KEY,
  article_id INTEGER REFERENCES article(id) ON DELETE CASCADE,
  image_url TEXT NOT NULL
);

-- ARTICLE_LIKE
CREATE TABLE article_like (
  id SERIAL PRIMARY KEY,
  article_id INTEGER REFERENCES article(id) ON DELETE CASCADE,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- COMMENT
CREATE TABLE comment (
  id SERIAL PRIMARY KEY,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  type VARCHAR(10) NOT NULL, -- 'PRODUCT' or 'ARTICLE'
  target_id INTEGER NOT NULL,
  content TEXT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- TAG
CREATE TABLE tag (
  id SERIAL PRIMARY KEY,
  name VARCHAR(5) UNIQUE NOT NULL
);

-- CHAT
CREATE TABLE chat (
  id SERIAL PRIMARY KEY,
  product_id INTEGER REFERENCES product(id) ON DELETE SET NULL,
  buyer_id INTEGER REFERENCES users(id) ON DELETE SET NULL,
  seller_id INTEGER REFERENCES users(id) ON DELETE SET NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- CHAT_MESSAGE
CREATE TABLE chat_message (
  id SERIAL PRIMARY KEY,
  chat_id INTEGER REFERENCES chat(id) ON DELETE CASCADE,
  sender_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  message TEXT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- NOTIFICATION
CREATE TABLE notification (
  id SERIAL PRIMARY KEY,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  type VARCHAR(20) NOT NULL, -- 'CHAT', 'APPLICATION', ...
  content TEXT NOT NULL,
  is_read BOOLEAN DEFAULT true,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
